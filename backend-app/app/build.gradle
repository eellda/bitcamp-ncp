/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

// gradle 도구의 기능을 확장하는 설정
plugins {
    // gradle 에서 자바 application을 실행시킬 수 있도록 기능을 추가
    id 'application' // java plug in 포함
    //id 'java'

    // gradle 에서 스프링부트를 다를 수 있도록 기능을 추가
    id 'org.springframework.boot' version '3.0.1'

    // gradle에서 스프링부트 릐존 라이브러리를 다룰 수 있도록 기능을 추가
    id 'io.spring.dependency-management' version '1.1.0'
}

// 빌드 배파일 (.zar, .zip 등)을 만들 때 사용할 이름 설정
group = 'bitcamp' 
version = '0.0.1-SNAPSHOT'

// Application 개발에 사용하는 자바 언어의 최대 버전 설정
sourceCompatibility = '17'

// Spring Configuration Processor 설정 정보
configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

// 의존 라이브러리가 업로드 되어 있는 서버 정보
// gradle은 이 서버에서 라이브러리 파일을 다운로드 할 것이다
repositories {
    mavenCentral() // https://repo.maven.apache.org/maven2/
}

// Appliation 에서 사용하는 외부 라이브러리 정보
dependencies {
    //Spring Boot 기본 라이브러리
    implementation 'org.springframework.boot:spring-boot-starter-web'
    // 개발하는 동안 사용하는 라이브러리
    // 배포 파일을 만들 때 제외
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // Spring Boot 관련 애노테이션 처리 라이브러리
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    // 단위 테스트 할 때 사용하는 라이브러리
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.2'
    // 일반 용도의 유틸리티 라이브러리
 
    implementation 'com.google.guava:guava:31.1-jre'
}

// Application test 에 사용할 단위 테스트 프레임워크 설정
tasks.named('test') {
  useJUnitPlatform()
}

// run 명령으로 실행시킬 java class 이름
application {
    mainClass = 'bitcamp.bootapp.App'
}
